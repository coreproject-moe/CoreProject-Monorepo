# Generated by Django 4.2a1 on 2023-02-06 08:21

import colorfield.fields
import django.contrib.postgres.fields.hstore
import django.contrib.postgres.indexes
from django.db import migrations, models
import dynamic_filenames

from django.contrib.postgres.operations import (
    HStoreExtension,
    BtreeGinExtension,
    TrigramExtension,
)


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("episodes", "0002_initial"),
        ("characters", "0001_initial"),
        ("studios", "0001_initial"),
        ("producers", "0001_initial"),
    ]

    operations = [
        HStoreExtension(),
        BtreeGinExtension(),
        TrigramExtension(),
        migrations.CreateModel(
            name="AnimeGenreModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mal_id", models.IntegerField(unique=True)),
                ("name", models.CharField(default="", max_length=50, unique=True)),
                ("type", models.CharField(default="", max_length=50, unique=True)),
            ],
            options={
                "verbose_name": "Anime Genre",
            },
        ),
        migrations.CreateModel(
            name="AnimeModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mal_id", models.IntegerField(null=True, unique=True)),
                ("anilist_id", models.IntegerField(null=True, unique=True)),
                ("kitsu_id", models.IntegerField(null=True, unique=True)),
                ("name", models.CharField(max_length=1024, unique=True)),
                (
                    "name_japanese",
                    models.CharField(blank=True, default="", max_length=1024),
                ),
                ("source", models.CharField(blank=True, max_length=128, null=True)),
                ("aired_from", models.DateTimeField(blank=True, null=True)),
                ("aired_to", models.DateTimeField(blank=True, null=True)),
                (
                    "banner",
                    models.ImageField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to=dynamic_filenames.FilePattern(
                            filename_patten="banner/{uuid:s}{ext}"
                        ),
                    ),
                ),
                (
                    "cover",
                    models.ImageField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to=dynamic_filenames.FilePattern(
                            filename_pattern="cover/{uuid:s}{ext}"
                        ),
                    ),
                ),
                (
                    "banner_background_color",
                    colorfield.fields.ColorField(
                        blank=True,
                        default=None,
                        image_field=None,
                        max_length=18,
                        null=True,
                        samples=None,
                    ),
                ),
                (
                    "cover_background_color",
                    colorfield.fields.ColorField(
                        blank=True,
                        default=None,
                        image_field=None,
                        max_length=18,
                        null=True,
                        samples=None,
                    ),
                ),
                ("synopsis", models.TextField(blank=True, null=True)),
                ("background", models.TextField(blank=True, null=True)),
                ("rating", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "theme_openings",
                    django.contrib.postgres.fields.hstore.HStoreField(
                        blank=True, default=dict
                    ),
                ),
                (
                    "theme_endings",
                    django.contrib.postgres.fields.hstore.HStoreField(
                        blank=True, default=dict
                    ),
                ),
                ("updated", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Anime",
            },
        ),
        migrations.CreateModel(
            name="AnimeNameSynonymModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name": "Anime Synonym",
            },
        ),
        migrations.CreateModel(
            name="AnimeThemeModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mal_id", models.IntegerField(unique=True)),
                ("name", models.CharField(default="", max_length=50, unique=True)),
                ("type", models.CharField(default="", max_length=50, unique=True)),
            ],
            options={
                "verbose_name": "Anime Theme",
            },
        ),
        migrations.AddIndex(
            model_name="animenamesynonymmodel",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["name"],
                name="anime_name_synonym_trgm_idx",
                opclasses=["gin_trgm_ops"],
            ),
        ),
        migrations.AddField(
            model_name="animemodel",
            name="characters",
            field=models.ManyToManyField(blank=True, to="characters.charactermodel"),
        ),
        migrations.AddField(
            model_name="animemodel",
            name="episodes",
            field=models.ManyToManyField(blank=True, to="episodes.episodemodel"),
        ),
        migrations.AddField(
            model_name="animemodel",
            name="genres",
            field=models.ManyToManyField(blank=True, to="anime.animegenremodel"),
        ),
        migrations.AddField(
            model_name="animemodel",
            name="name_synonyms",
            field=models.ManyToManyField(blank=True, to="anime.animenamesynonymmodel"),
        ),
        migrations.AddField(
            model_name="animemodel",
            name="producers",
            field=models.ManyToManyField(blank=True, to="producers.producermodel"),
        ),
        migrations.AddField(
            model_name="animemodel",
            name="recommendations",
            field=models.ManyToManyField(blank=True, to="anime.animemodel"),
        ),
        migrations.AddField(
            model_name="animemodel",
            name="studios",
            field=models.ManyToManyField(blank=True, to="studios.studiomodel"),
        ),
        migrations.AddField(
            model_name="animemodel",
            name="themes",
            field=models.ManyToManyField(blank=True, to="anime.animethememodel"),
        ),
        migrations.AddIndex(
            model_name="animemodel",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["name"],
                name="anime_model_name_trgm_idx",
                opclasses=["gin_trgm_ops"],
            ),
        ),
        migrations.AddIndex(
            model_name="animemodel",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["name_japanese"],
                name="anime_name_japanese_trgm_idx",
                opclasses=["gin_trgm_ops"],
            ),
        ),
    ]
