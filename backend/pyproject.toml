[tool.poetry]
name = "coreproject"
version = "0.1.0"
description = "A modern backend powering the the world's most advanced anime site"
authors = ["baseplate-admin <61817579+baseplate-admin@users.noreply.github.com>"]
readme = "README.md"
license = "AGPL-3.0-only"


[tool.poetry.dependencies]
python = "^3.11"
django = {version = '>=5.0b1', extras = ['argon2']}
# First Party ( Redis )
# redis = {extras = ['hiredis'], version = ">=4.5.4"}
# https://github.com/redis/hiredis-py/issues/172
redis =  ">=4.5.4"
# First party ( Image )
pillow = ">=10.1.0"
# First Party ( Database )
psycopg = {extras = ["binary"], version = ">=3.1.12"}
# Database Integrations
django-ltree = ">=0.5.3"
# 3rd Party ( Rate Limit )
django-ratelimit = ">=4.1.0"
# 3rd Party ( Files )
django-dynamic-filenames = "*"
# 3rd Party ( Brute Force protection )
django-defender = ">=0.9.7"
# 3rd Party ( Tailwind CSS )
django-tailwind = ">=3.5.0"
# 3rd Party ( Middlewares )
django_cleanup = "*"
django_cors_headers = "*"
# 3rd Party ( Environmental Variables )
python_dotenv = "*"
# 3rd Party ( WhiteNoise )
whitenoise = {version = ">=6.6.0"}
# 3rd Party ( Tasks )
celery = {extras = ["redis"], version = ">=5.3.0"}
# 3rd Party ( Better admin widgets )
django-admin-hstore-widget = ">=1.2.1"   # https://github.com/PokaInc/django-admin-hstore-widget/pull/25
# 3rd Party ( Model Fields )
django-colorfield = "*"
# ===================================================
# Http Client
requests = ">=2.31.0"
requests-ratelimiter = {extras = ["redis"], version = ">=0.4.2"}
requests-cache = ">=1.1.0"
# Application servers
gunicorn = {extras = ["setproctile"], version = "*"}
uvicorn = {extras = ["standard"], version = ">=0.21.1"}
# Typing support
django-stubs-ext = "*"
# ===================================================
# Color Grabber
modern_colorthief = "^0.1.2"
# Parsers
selectolax = ">=0.3.17"
python-dateutil = ">=2.8.2"
# Rest Framework
djangorestframework = ">=3.14.0"
django-crispy-forms = ">=2.1"
# OpenAPI
drf-spectacular = ">=0.26.5"
drf-spectacular-sidecar = ">=2023.10.1"
# Django filters
django-filter = ">=23.3"
crispy-bootstrap4 = ">=2023.1"
# Components
django-components = ">=0.29"
django-htmx = ">=1.17.0"
# Markdown
markdown = ">=3.5"
pymdown-extensions = {extras = ["pygments"], version = ">=10.3.1"}
django-vite = "^3.0.0"


[tool.poetry.group.dev.dependencies]
## Watchfiles
# https://github.com/adamchainz/django-watchfiles/issues/12
# django-watchfiles = "*"
# Django
django-browser-reload = "^1.12.1"
django_debug_toolbar = "*"
django_dbbackup = "*"
django_cprofile_middleware = "*"
## Code formatting
# Black
black = ">=23.10.1"
# Linting
ruff = ">=0.1.3"
# Mypy
mypy = ">=1.6.1"
# Stubs
django_stubs = {extras = ["compatible_mypy"], version = "*"}
djangorestframework-stubs = {extras = ["compatible-mypy","markdown"], version = "^3.14.4"}
django-filter-stubs = "^0.1.3"
# Types
types_redis = "*"
types-requests = "^2.31.0.10"
types-markdown = "^3.5.0.3"
types-pyyaml = "^6.0.12.12"
types-python-dateutil = "^2.8.19.14"

# Task Runner
poethepoet = "^0.24.3"
# Django extensions
django-extensions = "^3.2.3"
# pygraphviz = "^1.10"
# # Profiler
# gprof2dot = "^2022.7.29"



[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
pytest-django = "^4.7.0"

[tool.poe.tasks]
dev = 'python ./django_core/manage.py runserver 127.0.0.1:9000'
## Prod servers
prod_uvicorn = "gunicorn --app-dir=django_core core.asgi:application -w 4 -k uvicorn.workers.UvicornWorker" # For linux only
##  Migrations
sync = "python ./django_core/manage.py migrate"
mksync = "python ./django_core/manage.py makemigrations"
createsuperuser = 'python ./django_core/manage.py createsuperuser'
## Staticfiles
collectstatic = "python ./django_core/manage.py collectstatic --clear --link" # Dont duplicate copy files.
## Mypy
mypy = "mypy . --enable-incomplete-feature=Unpack"
## Django extensions
graph = "python django_core/manage.py graph_models -a -o mymodel.png"
reset_db = "python django_core/manage.py reset_db"
# Test
test_shinobi = 'pytest -vv ./shinobi'

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "core.settings"
pythonpath = 'django_core shinobi'
python_files = ["test_*.py", "*_test.py", "testing/python/*.py"]

[tool.black]
line-length = 92
target-version = ["py311"]

[tool.mypy]
show_error_codes = true
warn_unreachable = true
strict = true
disallow_any_generics = true
disallow_subclassing_any = true
warn_return_any = true
ignore_missing_imports = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
check_untyped_defs = true
follow_imports = "silent"
plugins = [
  "mypy_django_plugin.main",
  'mypy_drf_plugin.main'
]
exclude = [
    "migrations"
]
mypy_path = "django_core"
namespace_packages = true
explicit_package_bases = true

[tool.django-stubs]
django_settings_module = "core.settings"

[tool.ruff]
line-length = 92

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    # https://github.com/charliermarsh/ruff/issues/61#issuecomment-1233497658
    '**/migrations/*',
    # Ignore tests
    '**/test/*'
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.11
target-version = "py311"

select = [
  "E",  # pycodestyle
  "F",  # pyflakes
  "I",  # isort
]

[tool.ruff.per-file-ignores]
"*/__init__.py" = ["E402",'E501']
"*/settings.py" = ["E402"]
"*/api_v1.py" = ["E402"]
"*/urls.py" = ['E402']

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
